---
interface Props {
  size?: 'small' | 'medium' | 'large';
  class?: string;
}

const { size = 'medium', class: className } = Astro.props;
---

<div class:list={['logo', `logo--${size}`, className]}>
  <svg
    width="120"
    height="120"
    viewBox="0 0 120 120"
    fill="none"
    xmlns="http://www.w3.org/2000/svg"
  >
    <!-- Outer Circle -->
    <circle cx="60" cy="60" r="58" stroke="currentColor" stroke-width="2"></circle>

    <!-- Inner Circle -->
    <circle cx="60" cy="60" r="45" stroke="currentColor" stroke-width="1.5"></circle>

    <!-- Decorative Pattern -->
    <g>
      <!-- Radial Lines -->
      <path d="M60 15 L60 30" stroke="currentColor" stroke-width="1"></path>
      <path d="M60 90 L60 105" stroke="currentColor" stroke-width="1"></path>
      <path d="M15 60 L30 60" stroke="currentColor" stroke-width="1"></path>
      <path d="M90 60 L105 60" stroke="currentColor" stroke-width="1"></path>

      <!-- Diagonal Lines -->
      <path d="M28 28 L38 38" stroke="currentColor" stroke-width="1"></path>
      <path d="M82 28 L72 38" stroke="currentColor" stroke-width="1"></path>
      <path d="M28 92 L38 82" stroke="currentColor" stroke-width="1"></path>
      <path d="M82 92 L72 82" stroke="currentColor" stroke-width="1"></path>
    </g>

    <!-- Center Dot -->
    <circle cx="60" cy="60" r="3" fill="currentColor"></circle>
  </svg>
</div>

<style>
  .logo {
    display: inline-block;
    transition: transform var(--transition-normal);
  }

  .logo:hover {
    transform: scale(1.05);
  }

  .logo svg {
    width: 100%;
    height: 100%;
    transform-origin: center;
    animation: rotate 30s linear infinite;
  }

  .logo--small {
    width: 32px;
    height: 32px;
  }

  .logo--medium {
    width: 48px;
    height: 48px;
  }

  .logo--large {
    width: 64px;
    height: 64px;
  }

  @keyframes rotate {
    from {
      transform: rotate(0deg);
    }
    to {
      transform: rotate(360deg);
    }
  }
</style>
