---
interface Props {
  items?: Array<{
    href: string;
    text: string;
  }>;
}

const {
  items = [
    { href: '#welcome', text: 'WILLKOMMEN' },
    { href: '#collection', text: 'KOLLEKTION' },
    { href: '#cafe', text: 'NOMAD CAFÃ‰' },
    { href: '#kultur', text: 'KULTUR' },
    { href: '#contact', text: 'KONTAKT' },
  ],
} = Astro.props;
---

<nav class="nav" aria-label="Hauptnavigation">
  <div class="nav-backdrop"></div>
  <div class="nav-content">
    <ul>
      {
        items.map((item) => (
          <li>
            <a href={item.href} class="nav-link">
              {item.text}
            </a>
          </li>
        ))
      }
    </ul>
  </div>
</nav>

<style>
  .nav {
    display: flex;
    align-items: center;
  }

  .nav ul {
    display: flex;
    align-items: center;
    gap: var(--space-layout-md);
    list-style: none;
    padding: 0;
    margin: 0;
  }

  .nav-link {
    color: var(--color-text-muted);
    font-size: var(--font-size-base);
    letter-spacing: var(--letter-spacing-wide);
    padding: var(--space-component-md);
    transition: all var(--transition-normal);
    text-decoration: none;
    font-weight: var(--font-weight-light);
    white-space: nowrap;
  }

  .nav-link:hover {
    color: var(--color-text-base);
  }

  :global(.scrolled) .nav-link {
    color: var(--color-text-base);
  }

  @media (max-width: 1300px) {
    .nav {
      display: none;
      position: fixed;
      inset: 0;
      z-index: var(--z-overlay);
    }

    .nav-backdrop {
      position: absolute;
      inset: 0;
      background: rgba(0, 0, 0, 0.3);
      opacity: 0;
      transition: opacity var(--transition-normal);
    }

    .nav-content {
      position: absolute;
      top: 0;
      right: 0;
      bottom: 0;
      width: min(100%, 400px);
      background: var(--color-surface-base);
      transform: translateX(100%);
      transition: transform var(--transition-normal);
      display: flex;
      align-items: center;
      justify-content: center;
      padding: var(--space-layout-xl);
    }

    .nav ul {
      flex-direction: column;
      justify-content: center;
      align-items: center;
      gap: var(--space-layout-lg);
      width: 100%;
    }

    .nav-link {
      font-size: var(--font-size-lg);
      color: var(--color-text-base);
      display: block;
      padding: var(--space-component-lg);
      text-align: center;
      width: 100%;
    }

    :global(body.menu-open) .nav {
      display: block;
    }

    :global(body.menu-open) .nav-backdrop {
      opacity: 1;
    }

    :global(body.menu-open) .nav-content {
      transform: translateX(0);
    }
  }
</style>

<script>
  // Close mobile menu when clicking on a link or backdrop
  const closeMenu = () => {
    document.body.classList.remove('menu-open');
    const menuToggle = document.querySelector('.menu-toggle');
    if (menuToggle) {
      menuToggle.classList.remove('active');
    }
  };

  document.querySelectorAll('.nav-link').forEach((link) => {
    link.addEventListener('click', closeMenu);
  });

  document.querySelector('.nav-backdrop')?.addEventListener('click', closeMenu);
</script>
